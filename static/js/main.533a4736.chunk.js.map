{"version":3,"sources":["Button.js","Table.js","Select.js","StyledSchedule.js","constants.js","ScheduleGenerator.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["StyledButton","styled","button","Button","onClick","children","Course","course","className","regNumber","date","start","end","instructor","Table","courses","Object","entries","map","key","StyledSelect","select","StyledSchedule","div","badMajors","Set","getAllCourses","a","fetch","data","json","physicalScience","lifeScience","textsAndIdeas","culturesAndContexts","expressiveCulture","quantitativeReasoning","i","length","id","parseInt","deptCourseId","j","sections","sectionID","meetingDate","k","meetings","getDay","beginDate","charAt","meetingTime","moment","format","endingTime","add","minutesDuration","concat","allSubjects","push","console","log","undefined","getAllSeminars","instructors","registrationNumber","findSeminar","chosenSeminar","seminars","toString","name","validateRegistration","arrayOfReges","newReg","allReges","join","checkValidSchedule","Boolean","getMajor","chosenMajor","majors","majorClass","getRandomSections","allSubjectsSeminars","randomSectionArray","random","fourRandomIndices","seminar","randomSubjectOne","randomSubjectTwo","randomSubjectThree","randomSubjectFour","index4","getRandomIndex","fakeSeminar","index1","randomSectionOne","index2","randomSectionTwo","index3","randomSectionThree","size","Math","floor","one","two","three","ScheduleGenerator","useState","setCourses","setSeminars","setMajors","mySections","setMySections","mySeminar","setMySeminar","setSeminar","setMajor","logSubjects","e","subjects","noSeminar","unshift","logMajorSubjects","response","noMajor","keys","values","randomCourses","fullSchedule","shift","useEffect","onChange","event","preventDefault","target","value","filter","code","has","major","firstCourse","secondCourse","thirdCourse","fourthCourse","StyledHeader","header","AllContent","scalein","keyframes","StyledTitle","h1","HomeLink","App","href","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.533a4736.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background-color: #969595;\n  border: 2px solid black;\n\n  color: white;\n  font-weight: bold;\n  width: 200px;\n  height: 50px;\n  font-size: 20px;\n  border-radius: 5px;\n  font-family: Courier New;\n  text-transform: uppercase;\n  transition: 0.2s filter;\n  margin: 0 0 25px 0;\n  cursor: pointer;\n  :hover {\n    filter: brightness(75%);\n  }\n`;\n\n// you always pass down a handle and you receive an on\nfunction Button({ onClick, children }) {\n  return <StyledButton onClick={onClick}>{children}</StyledButton>;\n}\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Course = ({ course }) => {\n  // convert this to styled components;\n  return (\n    <>\n      <div className=\"Rtable-cell reg-num Rtable-cell--head\">\n        {course.regNumber}\n      </div>\n      <div className=\"Rtable-cell date\">{course.date}</div>\n      <div className=\"Rtable-cell start\">{course.start}</div>\n      <div className=\"Rtable-cell end\">{course.end}</div>\n      <div className=\"Rtable-cell class-name\">{course.className}</div>\n      <div className=\"Rtable-cell professor Rtable-cell--foot\">\n        {course.instructor}\n      </div>\n    </>\n  );\n};\n\nconst Table = ({ courses }) => {\n  return (\n    <div className=\"Rtable Rtable--6cols Rtable--collapse\">\n      <div className=\"Rtable-cell reg-num Rtable-cell--head\">\n        <h3>Reg Number</h3>\n      </div>\n      <div className=\"Rtable-cell date\">\n        <h3>Day(s)</h3>\n      </div>\n      <div className=\"Rtable-cell start\">\n        <h3>Start Time</h3>\n      </div>\n      <div className=\"Rtable-cell end\">\n        <h3>End Time</h3>\n      </div>\n      <div className=\"Rtable-cell class-name\">\n        <h3>Class</h3>\n      </div>\n      <div className=\"Rtable-cell professor Rtable-cell--foot\">\n        <h3>Professor</h3>\n      </div>\n      {Object.entries(courses).map(([key, course]) => {\n        return <Course key={key} course={course} />;\n      })}\n    </div>\n  );\n};\n\nexport default Table;\n","import styled from \"styled-components\";\n\nconst StyledSelect = styled.select`\n  border: 2px solid black;\n  padding-left: 10px;\n  color: black;\n  width: 30vw;\n  height: 35px;\n  font-size: 20px;\n  margin: 0 10px 20px 10px;\n`;\n\nexport default StyledSelect;\n","import styled from \"styled-components\";\n\nconst StyledSchedule = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n`;\n\nexport default StyledSchedule;\n","export const badMajors = new Set([\"COHRT\", \"FYSEM\",\"MAINT\",\"SCHOL\",\"NODEP\"]);\nexport const badSeminars = new Set([\"COHRT\", \"FYSEM\",\"MAINT\",\"SCHOL\",\"NODEP\"]);\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\n// import styled from \"styled-components\";\nimport Table from \"./Table\";\nimport moment from \"moment\";\nimport StyledSelect from \"./Select\"; // default import\nimport StyledSchedule from \"./StyledSchedule\";\nimport { badMajors } from \"./constants\";\n\nasync function getAllCourses() {\n  try {\n    const data = await fetch(\"https://schedge.a1liu.com/2020/FA/UA/CORE\");\n    // awaits for the promise to return the data\n    const courses = await data.json();\n\n    let physicalScience = [];\n    let lifeScience = [];\n    let textsAndIdeas = [];\n    let culturesAndContexts = [];\n    let expressiveCulture = [];\n    let quantitativeReasoning = [];\n\n    let i = 0;\n\n    for (i = 0; i < courses.length; i++) {\n      const id = parseInt(courses[i].deptCourseId);\n\n      let j = 0;\n      for (j = 0; j < courses[i].sections.length; j++) {\n        courses[i].sections[j].sectionID = id;\n\n        courses[i].sections[j].meetingDate = \"\";\n        let k;\n        for (k = 0; k < courses[i].sections[j].meetings.length; k++) {\n          courses[i].sections[j].meetingDate +=\n            getDay(courses[i].sections[j].meetings[k].beginDate.charAt(9)) +\n            \" \";\n          courses[i].sections[j].meetingTime = moment(\n            courses[i].sections[j].meetings[k].beginDate\n          );\n          courses[i].sections[j].meetingTime = courses[i].sections[\n            j\n          ].meetingTime.format(\"hh[:]mm A [ET]\");\n\n          courses[i].sections[j].endingTime = moment(\n            courses[i].sections[j].meetings[k].beginDate\n          ).add(courses[i].sections[j].meetings[k].minutesDuration, \"minutes\");\n          courses[i].sections[j].endingTime = courses[i].sections[\n            j\n          ].endingTime.format(\"hh[:]mm A [ET]\");\n        }\n      }\n      j = 0;\n\n      if (id < 300 && id >= 200) {\n        physicalScience = physicalScience.concat(courses[i].sections);\n      } else if (id < 400 && id >= 300) {\n        lifeScience = lifeScience.concat(courses[i].sections);\n      } else if (id >= 400 && id < 500) {\n        textsAndIdeas = textsAndIdeas.concat(courses[i].sections);\n      } else if (id >= 500 && id < 600) {\n        culturesAndContexts = culturesAndContexts.concat(courses[i].sections);\n      } else if (id >= 700) {\n        expressiveCulture = expressiveCulture.concat(courses[i].sections);\n      } else {\n        quantitativeReasoning = quantitativeReasoning.concat(\n          courses[i].sections\n        );\n      }\n    }\n\n    const allSubjects = [];\n    allSubjects.push(physicalScience);\n    allSubjects.push(lifeScience);\n    allSubjects.push(textsAndIdeas);\n    allSubjects.push(culturesAndContexts);\n    allSubjects.push(expressiveCulture);\n    allSubjects.push(quantitativeReasoning);\n\n    return allSubjects;\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nasync function getAllSeminars() {\n  try {\n    const data = await fetch(\"https://schedge.a1liu.com/2020/FA/UA/FYSEM\");\n    // awaits for the promise to return the data\n    const courses = await data.json();\n\n    for (let i = 0; i < courses.length; i++) {\n      const id = parseInt(courses[i].deptCourseId);\n      courses[i].sectionID = id;\n      courses[i].instructor = courses[i].sections[0].instructors[0];\n      courses[i].meetingDate = getDay(\n        courses[i].sections[0].meetings[0].beginDate.charAt(9)\n      );\n      courses[i].meetingTime = moment(\n        courses[i].sections[0].meetings[0].beginDate\n      );\n      courses[i].meetingTime = courses[i].meetingTime.format(\"hh[:]mm A [ET]\");\n      courses[i].registrationNumber = courses[i].sections[0].registrationNumber;\n      courses[i].endingTime = moment(\n        courses[i].sections[0].meetings[0].beginDate\n      ).add(courses[i].sections[0].meetings[0].minutesDuration, \"minutes\");\n      courses[i].endingTime = courses[i].endingTime.format(\"hh[:]mm A [ET]\");\n    }\n\n    return courses;\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nfunction findSeminar(chosenSeminar, seminars) {\n  //assuming its 1d\n  if (chosenSeminar.toString() === \"No Seminar\") {\n    return \"\";\n  }\n  let i;\n  for (i = 0; i < seminars.length; i++) {\n    if (chosenSeminar === seminars[i].name) {\n      return seminars[i];\n    }\n  }\n}\n\nasync function validateRegistration(arrayOfReges, newReg) {\n  let allReges = arrayOfReges.join(\",\") + \",\" + newReg;\n  const data = await fetch(\n    \"https://schedge.a1liu.com/2020/FA/generateSchedule?registrationNumbers=\" +\n      allReges\n  );\n  const checkValidSchedule = await data.json();\n  return Boolean(checkValidSchedule[\"valid\"]);\n}\n\nasync function getMajor(chosenMajor) {\n  if (chosenMajor.toString() === \"No Major\") {\n    return \"No Major\";\n  }\n  const data = await fetch(\n    \"https://schedge.a1liu.com/2020/FA/UA/\" + chosenMajor\n  );\n  const majors = await data.json();\n\n  let majorClass = majors[0];\n  majorClass.registrationNumber = majorClass.sections[0].registrationNumber;\n  majorClass.instructors = {};\n  majorClass.instructors[0] = majorClass.sections[0].instructors[0];\n  majorClass.meetingDate = getDay(\n    majorClass.sections[0].meetings[0].beginDate.charAt(9)\n  );\n  majorClass.meetingTime = moment(majorClass.sections[0].meetings[0].beginDate);\n  majorClass.meetingTime = majorClass.meetingTime.format(\"hh[:]mm A [ET]\");\n  majorClass.endingTime = moment(\n    majorClass.sections[0].meetings[0].beginDate\n  ).add(majorClass.sections[0].meetings[0].minutesDuration, \"minutes\");\n  majorClass.endingTime = majorClass.endingTime.format(\"hh[:]mm A [ET]\");\n  majorClass.name = majorClass.sections[0].name;\n  return majorClass;\n}\n\nasync function getRandomSections(\n  allSubjects,\n  chosenSeminar,\n  allSubjectsSeminars,\n  chosenMajor\n) {\n  try {\n    let randomSectionArray = [];\n    let random = fourRandomIndices(allSubjects.length);\n\n    let seminar = findSeminar(chosenSeminar, allSubjectsSeminars);\n    let randomSubjectOne = allSubjects[random[0]];\n    let randomSubjectTwo = allSubjects[random[1]];\n    let randomSubjectThree = allSubjects[random[2]];\n\n    if (seminar === \"\") {\n      let randomSubjectFour = allSubjects[random[3]];\n      let index4 = getRandomIndex(randomSubjectFour.length);\n      let fakeSeminar = randomSubjectFour[index4];\n      seminar = fakeSeminar;\n      seminar.instructor = fakeSeminar.instructors[0];\n    }\n\n    let index1 = getRandomIndex(randomSubjectOne.length);\n    let randomSectionOne = randomSubjectOne[index1];\n\n    let majorClass = await getMajor(chosenMajor);\n    if (majorClass !== \"No Major\") {\n      randomSectionOne = majorClass;\n    }\n    while (\n      !(await validateRegistration(\n        [seminar.registrationNumber],\n        randomSectionOne.registrationNumber\n      ))\n    ) {\n      index1 = getRandomIndex(randomSubjectTwo.length);\n      randomSectionOne = randomSubjectOne[index1];\n      // console.log(\"conflictforFirstClass\");\n    }\n\n    let index2 = getRandomIndex(randomSubjectTwo.length);\n    let randomSectionTwo = randomSubjectTwo[index2];\n    while (\n      !(await validateRegistration(\n        [seminar.registrationNumber, randomSectionOne.registrationNumber],\n        randomSectionTwo.registrationNumber\n      ))\n    ) {\n      index2 = getRandomIndex(randomSubjectTwo.length);\n      randomSectionTwo = randomSubjectTwo[index2];\n      // console.log(\"conflictforSecondClass\");\n    }\n\n    let index3 = getRandomIndex(randomSubjectThree.length);\n    let randomSectionThree = randomSubjectThree[index3];\n    while (\n      !(await validateRegistration(\n        [\n          seminar.registrationNumber,\n          randomSectionOne.registrationNumber,\n          randomSectionTwo.registrationNumber,\n        ],\n        randomSectionThree.registrationNumber\n      ))\n    ) {\n      index3 = getRandomIndex(randomSubjectThree.length);\n      randomSectionThree = randomSubjectThree[index3];\n      // console.log(\"conflictforThirdClass\");\n    }\n\n    randomSectionArray.push(seminar);\n    randomSectionArray.push(randomSectionOne);\n    randomSectionArray.push(randomSectionTwo);\n    randomSectionArray.push(randomSectionThree);\n\n    return randomSectionArray;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nconst ScheduleGenerator = () => {\n  // all course options\n  const [courses, setCourses] = useState([]);\n  const [seminars, setSeminars] = useState([]);\n  const [majors, setMajors] = useState([]);\n\n  // personal schedule\n  const [mySections, setMySections] = useState([]); // all of your classes\n  const [mySeminar, setMySeminar] = useState([]); // full seminar object that the person is taking\n  const [chosenSeminar, setSeminar] = useState([\"No Seminar\"]); // what the user manually--is a name\n  const [chosenMajor, setMajor] = useState(\"No Major\");\n\n  const logSubjects = async (e) => {\n    if (seminars.length === 0) {\n      const subjects = await getAllSeminars(); // 2d array\n\n      let noSeminar = { name: \"No Seminar\" };\n      subjects.unshift(noSeminar);\n\n      setSeminars(subjects);\n      return;\n    }\n  };\n\n  const logMajorSubjects = async (e) => {\n    if (majors.length === 0) {\n      const response = await fetch(\"https://schedge.a1liu.com/subjects\");\n      const subjects = await response.json();\n\n      let noMajor = { name: \"No Major\" };\n\n      let keys = Object.keys(subjects[\"UA\"]);\n      let values = Object.values(subjects[\"UA\"]);\n\n      keys.unshift(\"No Major\");\n      values.unshift(noMajor);\n\n      let majors = {};\n      let i;\n      for (i = 0; i < keys.length; i++) {\n        majors[keys[i]] = values[i];\n      }\n\n      setMajors(majors);\n\n      return;\n    }\n  };\n\n  useEffect(() => {\n    logSubjects();\n  }, []);\n  useEffect(() => {\n    logMajorSubjects();\n  }, []);\n\n  async function generateSchedule() {\n    let fullSchedule;\n    if (courses.length === 0) {\n      const randomCourses = await getAllCourses();\n      setCourses(randomCourses);\n      fullSchedule = await getRandomSections(\n        randomCourses,\n        chosenSeminar,\n        seminars,\n        chosenMajor\n      );\n    } else {\n      fullSchedule = await getRandomSections(\n        courses,\n        chosenSeminar,\n        seminars,\n        chosenMajor\n      );\n    }\n    if(fullSchedule !== undefined) {\n      setMySeminar(fullSchedule[0]);\n      fullSchedule.shift();\n      setMySections(fullSchedule);\n    }\n  }\n\n  function handleSeminarChange(event) {\n    event.preventDefault();\n    setSeminar(event.target.value); \n  }\n\n  function handleMajorChange(event) {\n    event.preventDefault();\n    setMajor(event.target.value);\n  }\n\n  return (\n    <StyledSchedule>\n      <div>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <StyledSelect onChange={handleMajorChange}>\n                  {Object.entries(majors)\n                    .filter(([code, major]) => !badMajors.has(code))\n                    .map(([code, major]) => {\n                      return (\n                        <option key={code} value={code}>\n                          {\" \"}\n                          {major.name}{\" \"}\n                        </option>\n                      );\n                    })}\n                </StyledSelect>\n              </td>\n              <td>\n                <StyledSelect onChange={handleSeminarChange}>\n                  {Object.entries(seminars).map(([name, seminar]) => {\n                    return (\n                      <option key={seminar.name} value={seminar.name}>\n                        {\" \"}\n                        {seminar.name}{\" \"}\n                      </option>\n                    );\n                  })}\n                </StyledSelect>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <Button onClick={generateSchedule}> Generate Schedule </Button>\n      {mySections.length !== 0 && (\n        <Table\n          courses={{\n            firstCourse: {\n              regNumber: mySeminar.registrationNumber,\n              className: mySeminar.name,\n              date: mySeminar.meetingDate,\n              start: mySeminar.meetingTime,\n              end: mySeminar.endingTime,\n              instructor: mySeminar.instructor,\n            },\n            secondCourse: {\n              regNumber: mySections[0].registrationNumber,\n              className: mySections[0].name,\n              date: mySections[0].meetingDate,\n              start: mySections[0].meetingTime,\n              end: mySections[0].endingTime,\n              instructor: mySections[0].instructors[0],\n            },\n            thirdCourse: {\n              regNumber: mySections[1].registrationNumber,\n              className: mySections[1].name,\n              date: mySections[1].meetingDate,\n              start: mySections[1].meetingTime,\n              end: mySections[1].endingTime,\n              instructor: mySections[1].instructors[0],\n            },\n            fourthCourse: {\n              regNumber: mySections[2].registrationNumber,\n              className: mySections[2].name,\n              date: mySections[2].meetingDate,\n              start: mySections[2].meetingTime,\n              end: mySections[2].endingTime,\n              instructor: mySections[2].instructors[0],\n            },\n          }}\n        ></Table>\n      )}\n    </StyledSchedule>\n  );\n};\n\n// Calculations Functions\nfunction getDay(beginDate) {\n  if (beginDate === \"2\") {\n    return \"Wed\";\n  } else if (beginDate === \"3\") {\n    return \"Thur\";\n  } else if (beginDate === \"4\") {\n    return \"Fri\";\n  } else if (beginDate === \"7\") {\n    return \"Mon\";\n  }\n  return \"Tues\";\n}\n\nfunction getRandomIndex(size) {\n  return Math.floor(Math.random() * size);\n}\n\nfunction fourRandomIndices(size) {\n  const one = Math.floor(Math.random() * size);\n  let two = (one + 1) % size;\n  let three = (two + 1) % size;\n  let four = (three + 1) % size;\n  return [one, two, three, four];\n}\n\nexport default ScheduleGenerator;\n","import styled from \"styled-components\";\n\nconst StyledHeader = styled.header`\n  background-color: #220337;\n  color: white;\n  height: 50px;\n  font-size: 40px;\n  font-family: Courier New;\n  padding: 15px;\n  margin-bottom: 5px;\n  width: 100vw;\n  text-indent: 10px;\n`;\n\nexport default StyledHeader;\n","import React from \"react\";\nimport \"./App.css\";\nimport ScheduleGenerator from \"./ScheduleGenerator\";\nimport styled, {keyframes} from \"styled-components\";\nimport StyledHeader from \"./Header\";\n\nconst AllContent = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst scalein = keyframes`\n  from {\n    transform: scale(0.9);\n  }\n  to {\n    transform: scale(1);\n  }\n`\n\nconst StyledTitle = styled.h1`\n  font-size: 50px;\n  font-family: Courier New;\n  margin-top: 30px;\n  margin-bottom: 10px;\n  text-align: center;\n  color: #330662;\n  animation: ${scalein} 1s;\n`;\n\nconst HomeLink = styled.a`\n  text-decoration: none;\n  color: white;\n`;\n\nconst App = () => {\n  return (\n    <AllContent>\n      <StyledHeader>\n        {\" \"}\n        <HomeLink href=\"/\">ALBERTA</HomeLink>{\" \"}\n      </StyledHeader>\n      <StyledTitle>NYU CAS SCHEDULE GENERATOR</StyledTitle>\n      <ScheduleGenerator />\n    </AllContent>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}